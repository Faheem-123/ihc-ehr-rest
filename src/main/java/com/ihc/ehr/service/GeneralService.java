package com.ihc.ehr.service;

import java.io.IOException;
import java.io.InputStream;
import java.util.List;

import org.springframework.web.multipart.MultipartFile;

import com.ihc.ehr.model.ORMAppSetting;
import com.ihc.ehr.model.ORMAuditLog;
import com.ihc.ehr.model.ORMChartReportDetailsforPHR;
import com.ihc.ehr.model.ORMDeleteRecord;
import com.ihc.ehr.model.ORMDocCategories;
import com.ihc.ehr.model.ORMDocCategoriesList;
import com.ihc.ehr.model.ORMDocumentPath;
import com.ihc.ehr.model.ORMFourColumGeneric;
import com.ihc.ehr.model.ORMGetBillingUsersList;
import com.ihc.ehr.model.ORMGetChartSummary;
import com.ihc.ehr.model.ORMGetCityState;
import com.ihc.ehr.model.ORMGetLocation;
import com.ihc.ehr.model.ORMGetPatientAllergiesSummary;
import com.ihc.ehr.model.ORMGetPatientHeaderInfo;
import com.ihc.ehr.model.ORMGetPatientInsuranceName;
import com.ihc.ehr.model.ORMGetPatientMedicationSummary;
import com.ihc.ehr.model.ORMGetPatientProblemsSummary;
import com.ihc.ehr.model.ORMGetProviderUsers;
import com.ihc.ehr.model.ORMGetReferringProvider;
import com.ihc.ehr.model.ORMGetUserChartModuleSetting;
import com.ihc.ehr.model.ORMGetUserRights;
import com.ihc.ehr.model.ORMHeaderVitals;
import com.ihc.ehr.model.ORMHeaderVitals_PHR;
import com.ihc.ehr.model.ORMIdCodeDescription;
import com.ihc.ehr.model.ORMIdCodeDescriptionDisplay;
import com.ihc.ehr.model.ORMIdName;
import com.ihc.ehr.model.ORMKeyValue;
import com.ihc.ehr.model.ORMLabelPrintDataGet;
import com.ihc.ehr.model.ORMLoginUserLog;
import com.ihc.ehr.model.ORMModules;
import com.ihc.ehr.model.ORMOneColumnGeneric;
import com.ihc.ehr.model.ORMPhysicianSearch;
import com.ihc.ehr.model.ORMPracticeInfo;
import com.ihc.ehr.model.ORMPracticeUsers;
import com.ihc.ehr.model.ORMPracticeUsersList;
import com.ihc.ehr.model.ORMProviderList;
import com.ihc.ehr.model.ORMSaveDocument;
import com.ihc.ehr.model.ORMThreeColum;
import com.ihc.ehr.model.ORMThreeColumGeneric;
import com.ihc.ehr.model.ORMTwoColumnGeneric;
import com.ihc.ehr.model.ORMUserRoleList;
import com.ihc.ehr.model.ORMZipCityState;
import com.ihc.ehr.model.ScanDocumentData;
import com.ihc.ehr.model.SearchCriteria;
import com.ihc.ehr.model.ServiceResponse;

public interface GeneralService {
	ORMPracticeInfo getPracticeInfo(Long practice_id);
	List<ORMProviderList> getProvider(Long practice_id);
	List<ORMThreeColum> getLabCategory(Long practiceID);
	List<ORMGetLocation> getLocation(Long practice_id);
	List<ORMPracticeUsers> getPracticeUserName(Long practice_id);
	int deleteRecord(ORMDeleteRecord obj);
	List<ORMGetUserChartModuleSetting> getUserChartModuleSetting(Long setting_id);
	List<ORMGetCityState> getCityState(String zip_code);
	List<ORMGetReferringProvider> searchReferringProvider(SearchCriteria searchCriteria);
	List<ORMDocCategories> getDocCategories(Long practice_id);
	List<ORMDocCategoriesList> getDocCategoriesList(Long practice_id);
	Long SaveDocument(ORMSaveDocument patDoc, MultipartFile docFile, String docCategory);
	List<ORMDocumentPath> getDocumentPaths(Long practice_id);
	InputStream GetDocument() throws IOException;
	byte[] downloadFile(String file_name);
	List<ORMGetUserRights> getUserRights(String user_id);
	List<ORMProviderList> getDistinctLocationProviders(Long practice_id);
	List<ORMGetProviderUsers> getProviderUser(Long practice_id);
	List<ORMIdName> AuthenticateProviderUser(SearchCriteria searchCriteria);
	int updateQuery(String query);
	List<ORMIdName> getAuthorizationUsers(Long practice_id);
	ORMGetPatientInsuranceName getPatientInsuranceName(SearchCriteria searchCriteria);
	List<ORMIdCodeDescriptionDisplay> getMaritalStatusList();
	List<ORMIdCodeDescriptionDisplay> getLanguageList(Long practice_id);
	List<ORMIdCodeDescription> getGenderIdentityList();
	List<ORMIdCodeDescription> getSexualOrientationList();
	List<ORMIdCodeDescription> getOMBRaceList();
	List<ORMIdCodeDescription> getOMBEthnicityList();
	List<ORMIdCodeDescription> getCountryParishCodeByState(String state);
	List<ORMZipCityState> getCityStateByZip(String zip);
	//List<ORMProvider_Eligibility> getProvider_Eligibility(Long practice_id);
	List<ORMIdCodeDescription> getRelationshipList();
	List<ORMIdCodeDescription> getImmRegistryStatusList();
	List<ORMIdCodeDescription> getImmRegistryPublicityCodeList();
	List<ORMIdCodeDescription> getImmRegistryProcectionIndicatorList();
	List<ORMPhysicianSearch> getProviderInfoById(Long providerId);
	ORMDocumentPath getDocumentPathByCategory(Long practice_id, String cateogry);
	List<ORMIdCodeDescription> getSnomedRelationshipList();
	ServiceResponse<ORMKeyValue> uploadScan(MultipartFile multipartFile, ScanDocumentData scanDocument);	
	List<ORMProviderList> getBillingProviderList(Long practice_id);
	List<ORMOneColumnGeneric> getStatesList();
	List<ORMGetBillingUsersList> getBillingUsersList(String billing_practice_id, String practiceID);
	List<ORMAppSetting> getAppSetting(Long practice_id);
	List<ORMUserRoleList> getUserAllRoles(Long practiceId);	
	List<ORMPracticeUsersList> getPracticeUsersList(Long practice_id);
	List<ORMIdCodeDescription> getSmokingStatusList();
	List<ORMIdCodeDescription> getDischargeDispositionList();

	ORMGetPatientHeaderInfo getPatientHeader(Long patientId);
	ORMHeaderVitals getPatientVitals(Long patientId);	
	ORMHeaderVitals_PHR getPatientVitalsPHR(Long patientId);
	List<ORMGetPatientAllergiesSummary> getPatientAllergies(Long patientId);
	List<ORMGetPatientMedicationSummary> getPatientMedicationSummary(Long patientId);
	List<ORMGetPatientProblemsSummary> getPatientProblems(Long patientId);
	List<ORMGetChartSummary> getPHREncounterSummary(String patient_id);
	List<ORMChartReportDetailsforPHR> getReportHeader(String chart_id);
	List<ORMFourColumGeneric> getInsuranceDetails(String patientId);
	ServiceResponse<ORMKeyValue> loginUserLog(ORMLoginUserLog ormSave);
	ServiceResponse<ORMKeyValue> logoutUserLog(SearchCriteria searchCriteria);
	ServiceResponse<ORMKeyValue> auditLog(ORMAuditLog ormSave);
	List<ORMThreeColumGeneric> getOverrideSecuritySettings(Long practice_id, String role_id);
	List<ORMModules> getAllModules(Long practice_id);
	String ConvertHtmltoPDF(SearchCriteria searchCriteria);
	List<ORMTwoColumnGeneric> getBillingPractices(String user_id);
	ORMLabelPrintDataGet getLabelPrintData(String label_type, String id);	
	List<ORMIdCodeDescription> getPOSList();
	byte[] getDocumentBytes(SearchCriteria searchCriteria);
	int getUnreadMessageCount(String receiverId);
	String getHPPublicKey(SearchCriteria searchCriteria);

}